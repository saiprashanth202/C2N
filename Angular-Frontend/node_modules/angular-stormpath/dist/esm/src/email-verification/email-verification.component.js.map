{"version":3,"file":"email-verification.component.js","sourceRoot":"","sources":["../../../../src/email-verification/email-verification.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAuB,KAAK,EAAE,MAAM,eAAe;OAC9D,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,QAAQ,EAAE,MAAM,iBAAiB;OACnC,EAAE,SAAS,EAAE,sBAAsB,EAAE,MAAM,gCAAgC;AAIlF;IAkBE,oCAAmB,SAAoB,EAAS,QAAkB;QAA/C,cAAS,GAAT,SAAS,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAU;IAClE,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;IACH,CAAC;IAED,oDAAe,GAAf;QACE,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,2CAAM,GAAN;QAAA,iBAcC;QAbC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC;aACtD,SAAS,CAAC;YACT,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzC,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACI,qCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,yqBAgBA;iBACX,EAAG,EAAE;QACN,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAH6F,CAG7F,CAAC;IACK,yCAAc,GAA2C;QAChE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACnC,CAAC;IACF,iCAAC;AAAD,CAAC,AAjFD,IAiFC","sourcesContent":["import { Component, OnInit, TemplateRef, Input } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Stormpath, defaultSpTokenResolver } from '../stormpath/stormpath.service';\n\n\n\nexport class EmailVerificationComponent implements OnInit {\n  /**\n   * A reference to a `<template>` tag that if set will override this component's template. Use like so:\n   * ```\n   * <template #customTemplate>\n   *   // custom HTML with login form\n   * </template>\n   * ```\n   * Then pass customTemplate to the `email-verification` component like so `[customTemplate]=\"customTemplate\"`\n   */\n   customTemplate: TemplateRef<any>;\n\n  protected error: string;\n  protected verifying: boolean;\n  protected verified: boolean;\n  protected verificationFailed: boolean;\n  protected sptoken: string;\n\n  constructor(public stormpath: Stormpath, public location: Location) {\n  }\n\n  ngOnInit(): void {\n    this.verifying = false;\n    this.verified = false;\n    this.verificationFailed = false;\n    this.sptoken = this.spTokenResolver();\n    if (this.sptoken) {\n      this.verify();\n    }\n  }\n\n  spTokenResolver(): string {\n    return defaultSpTokenResolver(this.location);\n  }\n\n  verify(): void {\n    this.verifying = true;\n    this.stormpath.verifyEmailVerificationToken(this.sptoken)\n      .subscribe(() => {\n        this.verifying = false;\n        this.verified = true;\n      }, (error) => {\n        this.verifying = false;\n        if (error.status && error.status === 404) {\n          this.verificationFailed = true;\n        } else {\n          this.error = error.message;\n        }\n      });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'email-verification',\n  template: `<template #defaultTemplate>\n<div class=\"row\">\n  <div class=\"col-sm-offset-4 col-xs-12 col-sm-4\">\n    <p *ngIf=\"verifying\" class=\"alert alert-warning\">We are verifying your account</p>\n    <p *ngIf=\"verified\" class=\"alert alert-success\">\n      Your account has has been verified!  You may now login.\n    </p>\n    <div *ngIf=\"verificationFailed\" class=\"alert alert-danger\">\n      This email verification link is not valid.  Please request a new email verification link.\n    </div>\n    <p class=\"text-danger\" *ngIf=\"error\">{{error}}</p>\n  </div>\n</div>\n</template>\n<template\n  [ngTemplateOutlet]=\"customTemplate || defaultTemplate\">\n</template>`\n}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Stormpath, },\n{type: Location, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'customTemplate': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}