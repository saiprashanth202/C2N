{"version":3,"file":"resend-email-verification.component.js","sourceRoot":"","sources":["../../../../src/resend-email-verification/resend-email-verification.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,UAAU,EAAU,KAAK,EAAe,MAAM,eAAe;OAC1E,EAAE,SAAS,EAAkC,MAAM,gCAAgC;AAI1F;IAgBE,0CAAmB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IACvC,CAAC;IAED,mDAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG;YACf,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC;IAED,+CAAI,GAAJ;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC;aACnD,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IACI,2CAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,2BAA2B;oBACrC,QAAQ,EAAE,gvCAkCA;iBACX,EAAG,EAAE;QACN,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;KAClB,EAF6F,CAE7F,CAAC;IACK,+CAAc,GAA2C;QAChE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACnC,CAAC;IACF,uCAAC;AAAD,CAAC,AA1FD,IA0FC","sourcesContent":["import { Component, Injectable, OnInit, Input, TemplateRef } from '@angular/core';\nimport { Stormpath, ResendEmailVerificationRequest } from '../stormpath/stormpath.service';\n\n\n\nexport class ResendEmailVerificationComponent implements OnInit {\n  /**\n   * A reference to a `<template>` tag that if set will override this component's template. Use like so:\n   * ```\n   * <template #customTemplate>\n   *   // custom HTML with login form\n   * </template>\n   * ```\n   * Then pass customTemplate to the `resend-email-verification` component like so `[customTemplate]=\"customTemplate\"`\n   */\n   customTemplate: TemplateRef<any>;\n  protected error: string;\n  protected formModel: ResendEmailVerificationRequest;\n  protected posting: boolean;\n  protected sent: boolean;\n\n  constructor(public stormpath: Stormpath) {\n  }\n\n  ngOnInit(): void {\n    this.posting = false;\n    this.sent = false;\n    this.formModel = {\n      login: ''\n    };\n  }\n\n  send(): void {\n    this.posting = true;\n    this.stormpath.resendVerificationEmail(this.formModel)\n      .subscribe(() => {\n        this.posting = false;\n        this.sent = true;\n      }, (error) => {\n        this.posting = false;\n        this.error = error.message;\n      });\n  }\n\n  onSubmit(): void {\n    this.send();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'resend-email-verification',\n  template: `<template #defaultTemplate>\n<div class=\"row\">\n  <div class=\"col-sm-offset-4 col-xs-12 col-sm-4\">\n\n    <p *ngIf=\"sent\" class=\"alert alert-success\">\n      We have sent a new verification message to your email address, please check your email for this message.\n    </p>\n\n    <p class=\"text-danger\" *ngIf=\"error\">{{error}}</p>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form class=\"form-horizontal\" *ngIf=\"!sent\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n\n      <div class=\"form-group\">\n        <label for=\"spUsername\" class=\"col-xs-12 col-sm-4 control-label\">Email address</label>\n        <div class=\"col-xs-12 col-sm-4\">\n          <input class=\"form-control\" id=\"spUsername\" [(ngModel)]=\"formModel.login\" [disabled]=\"posting\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-4 col-xs-12\">\n          <p class=\"text-danger\" *ngIf=\"error\">{{error}}</p>\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"posting\">Re-Send Verification</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n</template>\n<template\n  [ngTemplateOutlet]=\"customTemplate || defaultTemplate\">\n</template>`\n}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Stormpath, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'customTemplate': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}