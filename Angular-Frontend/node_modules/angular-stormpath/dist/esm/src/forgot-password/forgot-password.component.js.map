{"version":3,"file":"forgot-password.component.js","sourceRoot":"","sources":["../../../../src/forgot-password/forgot-password.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAuB,KAAK,EAAE,MAAM,eAAe;OAC9D,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,SAAS,EAAmD,MAAM,gCAAgC;AAI3G;IAeE,iCAAmB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QACrC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,uBAAuB,GAAG;YAC7B,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC;IAED,sCAAI,GAAJ;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,uBAAuB,CAAC;aAChE,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,EAC/B,UAAC,KAA6B,IAAK,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,EAA1B,CAA0B,CAAC,CAAC;IACrE,CAAC;IAED,0CAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IACI,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,+1CA+BA;iBACX,EAAG,EAAE;QACN,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;KAClB,EAF6F,CAE7F,CAAC;IACK,sCAAc,GAA2C;QAChE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACnC,CAAC;IACF,8BAAC;AAAD,CAAC,AAhFD,IAgFC","sourcesContent":["import { Component, OnInit, TemplateRef, Input } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Stormpath, ForgotPasswordFormModel, StormpathErrorResponse } from '../stormpath/stormpath.service';\n\n\n\nexport class ForgotPasswordComponent implements OnInit {\n  /**\n   * A reference to a `<template>` tag that if set will override this component's template. Use like so:\n   * ```\n   * <template #customTemplate>\n   *   // custom HTML with login form\n   * </template>\n   * ```\n   * Then pass customTemplate to the `forgot-password-form` component like so `[customTemplate]=\"customTemplate\"`\n   */\n   customTemplate: TemplateRef<any>;\n  protected forgotPasswordFormModel: ForgotPasswordFormModel;\n  protected error: string;\n  protected sent: boolean;\n\n  constructor(public stormpath: Stormpath) {\n    this.sent = false;\n  }\n\n  ngOnInit(): void {\n    this.forgotPasswordFormModel = {\n      email: ''\n    };\n  }\n\n  send(): void {\n    this.error = null;\n    this.stormpath.sendPasswordResetEmail(this.forgotPasswordFormModel)\n      .subscribe(() => this.sent = true,\n        (error: StormpathErrorResponse) => this.error = error.message);\n  }\n\n  onSubmit(form: any): void {\n    this.send();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'forgot-password-form',\n  template: `<template #defaultTemplate>\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <p *ngIf=\"sent\" class=\"alert alert-success\">\n        We have sent a password reset link to the email address of the account that you specified.\n        Please check your email for this message, then click on the link.\n      </p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <form class=\"form-horizontal\" *ngIf=\"!sent\" #form=\"ngForm\" (ngSubmit)=\"onSubmit(form.value)\" autocomplete=\"off\">\n        <div class=\"form-group\">\n          <label for=\"spEmail\" class=\"col-sm-3 control-label\">Email</label>\n          <div class=\"col-sm-9\">\n            <input class=\"form-control\" name=\"email\" type=\"email\" id=\"spEmail\" [(ngModel)]=\"forgotPasswordFormModel.email\"\n                   placeholder=\"Your Email Address\" [disabled]=\"posting\" required>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-sm-offset-3\">\n            <p class=\"text-danger\" *ngIf=\"error\">{{error}}</p>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"posting\">Request Password Reset</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n<template\n  [ngTemplateOutlet]=\"customTemplate || defaultTemplate\">\n</template>`\n}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Stormpath, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'customTemplate': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}