import { Component, Input } from '@angular/core';
import { Injectable } from '@angular/core';
import { Stormpath } from '../stormpath/stormpath.service';
export var RegisterComponent = (function () {
    function RegisterComponent(stormpath) {
        this.stormpath = stormpath;
        this.unverified = false;
        this.canLogin = false;
        this.formModel = {
            email: '',
            surname: '',
            givenName: '',
            password: ''
        };
    }
    RegisterComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.stormpath.getRegistrationViewModel()
            .subscribe(function (model) {
            _this.model = model;
        }, function (error) {
            return _this.error = error.message;
        });
    };
    RegisterComponent.prototype.register = function () {
        var _this = this;
        this.stormpath.register(this.formModel)
            .subscribe(function (account) {
            _this.registered = true;
            _this.unverified = account.status === 'UNVERIFIED';
            _this.canLogin = account.status === 'ENABLED';
            if (_this.canLogin && _this.autoLogin) {
                var loginAttempt = {
                    login: _this.formModel.email,
                    password: _this.formModel.password
                };
                _this.stormpath.login(loginAttempt);
            }
        }, function (error) { return _this.error = error.message; });
    };
    RegisterComponent.prototype.onSubmit = function () {
        this.register();
    };
    RegisterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'register-form',
                    template: "<template #defaultTemplate>\n  <form *ngIf=\"!registered\" (ngSubmit)=\"onSubmit()\" class=\"form-horizontal\" autocomplete=\"off\">\n    <div class=\"form-group\" *ngFor=\"let field of model?.form?.fields\">\n      <label [attr.for]=\"field.name\" class=\"col-sm-4 control-label\">{{field.label}}</label>\n      <div class=\"col-sm-8\">\n        <input class=\"form-control\" [name]=\"field.name\" [id]=\"field.name\" [type]=\"field.type\"\n               [(ngModel)]=\"formModel[field.name]\" [placeholder]=\"field.placeholder\" [disabled]=\"creating\" [required]=\"field.required\">\n      </div>\n    </div>\n    <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n  </form>\n  <p *ngIf=\"unverified\" class=\"alert alert-success\">\n    Your account has been created and requires verification.\n    Please check your email for a verification link.\n  </p>\n  <p class=\"alert alert-success\" *ngIf=\"canLogin\">\n    Your account has been created, you may now log in.\n  </p>\n</template>\n<template\n  [ngTemplateOutlet]=\"customTemplate || defaultTemplate\">\n</template>"
                },] },
        { type: Injectable },
    ];
    /** @nocollapse */
    RegisterComponent.ctorParameters = function () { return [
        { type: Stormpath, },
    ]; };
    RegisterComponent.propDecorators = {
        'customTemplate': [{ type: Input },],
        'autoLogin': [{ type: Input },],
    };
    return RegisterComponent;
}());
//# sourceMappingURL=register.component.js.map