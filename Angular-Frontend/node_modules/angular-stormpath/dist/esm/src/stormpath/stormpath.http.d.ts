import { Http, ConnectionBackend, Response, RequestOptionsArgs, Request, RequestOptions, XHRBackend } from '@angular/http';
import { Observable } from 'rxjs';
import { TokenStoreManager } from './token-store.manager';
import { StormpathConfiguration } from './stormpath.config';
export declare function httpFactory(backend: XHRBackend, defaultOptions: RequestOptions, config: StormpathConfiguration, tokenStore: TokenStoreManager): Http;
export declare class StormpathHttp extends Http {
    private backend;
    private defaultOptions;
    private config;
    private tokenStore;
    private currentDomain;
    constructor(backend: ConnectionBackend, defaultOptions: RequestOptions, config: StormpathConfiguration, tokenStore: TokenStoreManager);
    /**
     * Override all requests to add x-stormpath-agent and authorization headers when appropriate
     * @param url the url or a Request
     * @param options request options
     * @returns {Observable<Response>} the response as an observable
     */
    request(url: string | Request, options?: RequestOptionsArgs): Observable<Response>;
    /**
     * Add Stormpath headers and be aware of options versus request.headers
     * @param url
     * @param options
     */
    private addHeaders(url, options);
}
export declare class CurrentDomain {
    private window;
    equals(url: string | Request): boolean;
}
