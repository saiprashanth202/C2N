{
  "_args": [
    [
      {
        "raw": "angular-stormpath",
        "scope": null,
        "escapedName": "angular-stormpath",
        "name": "angular-stormpath",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\SAI\\Documents\\workspace-sts-3.9.0.RELEASE\\Angular-Frontend"
    ]
  ],
  "_from": "angular-stormpath@latest",
  "_id": "angular-stormpath@0.1.6",
  "_inCache": true,
  "_location": "/angular-stormpath",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/angular-stormpath-0.1.6.tgz_1486168941483_0.013838652055710554"
  },
  "_npmUser": {
    "name": "mraible",
    "email": "matt@raibledesigns.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-stormpath",
    "scope": null,
    "escapedName": "angular-stormpath",
    "name": "angular-stormpath",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-stormpath/-/angular-stormpath-0.1.6.tgz",
  "_shasum": "7a262d7125bf8dc00ca166a215da821495ee79da",
  "_shrinkwrap": null,
  "_spec": "angular-stormpath",
  "_where": "C:\\Users\\SAI\\Documents\\workspace-sts-3.9.0.RELEASE\\Angular-Frontend",
  "author": {
    "name": "Stormpath, Inc."
  },
  "bugs": {
    "url": "https://github.com/stormpath/stormpath-sdk-angular/issues"
  },
  "config": {
    "ghooks": {
      "commit-msg": "validate-commit-msg"
    },
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "angular2-cookie": "^1.2.6",
    "ng2-webstorage": "1.4.3"
  },
  "description": "Stormpath Components for Angular.",
  "devDependencies": {
    "@angular/common": "^2.4.0",
    "@angular/compiler": "^2.4.0",
    "@angular/compiler-cli": "^2.4.0",
    "@angular/core": "^2.4.0",
    "@angular/forms": "^2.4.0",
    "@angular/http": "^2.4.0",
    "@angular/platform-browser": "^2.4.0",
    "@angular/platform-browser-dynamic": "^2.4.0",
    "@angular/platform-server": "^2.4.0",
    "@types/chai": "~3.4.30",
    "@types/jasmine": "^2.5.38",
    "@types/sinon": "~1.16.27",
    "@types/sinon-chai": "~2.7.26",
    "@types/tether": "^1.4.0",
    "angular2-cookie": "^1.2.6",
    "angular2-template-loader": "^0.6.0",
    "awesome-typescript-loader": "^3.0.0-beta.17",
    "chai": "~3.5.0",
    "commitizen": "^2.9.2",
    "concurrently": "^3.1.0",
    "conventional-changelog": "~1.1.0",
    "conventional-changelog-cli": "~1.2.0",
    "core-js": "~2.4.1",
    "cz-conventional-changelog": "~1.2.0",
    "express-stormpath": "^3.1.5",
    "ghooks": "^2.0.0",
    "imports-loader": "^0.7.0",
    "jasmine-core": "~2.5.0",
    "jasmine-reporters": "^2.2.0",
    "karma": "^1.4.0",
    "karma-coverage": "~1.1.0",
    "karma-jasmine": "^1.1.0",
    "karma-phantomjs-launcher": "~1.0.0",
    "karma-remap-istanbul": "^0.4.0",
    "karma-sourcemap-loader": "~0.3.7",
    "karma-webpack": "^2.0.1",
    "ng2-webstorage": "1.4.3",
    "phantomjs-prebuilt": "~2.1.7",
    "protractor": "^5.0.0",
    "protractor-jasmine2-screenshot-reporter": "0.3.2",
    "raw-loader": "^0.5.1",
    "rxjs": "^5.0.2",
    "sinon": "~1.17.4",
    "sinon-chai": "~2.8.0",
    "sourcemap-istanbul-instrumenter-loader": "~0.2.0",
    "standard-version": "^4.0.0",
    "string-replace-webpack-plugin": "0.0.5",
    "ts-loader": "^1.3.2s",
    "ts-node": "^2.0.0",
    "tslint": "^4.0.2",
    "tslint-loader": "^3.3.0",
    "typedoc": "^0.5.1",
    "typescript": "~2.0.10",
    "validate-commit-msg": "~2.8.0",
    "webpack": "2.2.0",
    "webpack-dev-server": "2.2.0",
    "zone.js": "^0.7.4"
  },
  "directories": {},
  "dist": {
    "shasum": "7a262d7125bf8dc00ca166a215da821495ee79da",
    "tarball": "https://registry.npmjs.org/angular-stormpath/-/angular-stormpath-0.1.6.tgz"
  },
  "files": [
    "dist"
  ],
  "gitHead": "d2daccb2132be41c183841074d0c29fc2b915945",
  "homepage": "https://github.com/stormpath/stormpath-sdk-angular#readme",
  "keywords": [
    "angular",
    "angular2",
    "angular-component",
    "stormpath",
    "authentication",
    "authorization",
    "security"
  ],
  "license": "Apache-2.0",
  "main": "./dist/umd/stormpath-sdk-angular.js",
  "maintainers": [
    {
      "name": "afitnerd",
      "email": "micah@afitnerd.com"
    },
    {
      "name": "mraible",
      "email": "matt@raibledesigns.com"
    },
    {
      "name": "robertjd",
      "email": "robert@robertjd.com"
    }
  ],
  "module": "./dist/esm/src/index.js",
  "name": "angular-stormpath",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0",
    "@angular/forms": "^2.0.0",
    "@angular/http": "^2.0.0",
    "rxjs": "^5.0.2"
  },
  "readme": "# Stormpath Angular SDK\n[![Build Status](https://travis-ci.org/stormpath/stormpath-sdk-angular.svg?branch=master)](https://travis-ci.org/stormpath/stormpath-sdk-angular)\n[![npm version](https://badge.fury.io/js/angular-stormpath.svg)](http://badge.fury.io/js/angular-stormpath)\n[![devDependency Status](https://david-dm.org/stormpath/stormpath-sdk-angular/dev-status.svg)](https://david-dm.org/stormpath/stormpath-sdk-angular#info=devDependencies)\n[![GitHub issues](https://img.shields.io/github/issues/stormpath/stormpath-sdk-angular.svg)](https://github.com/stormpath/stormpath-sdk-angular/issues)\n[![GitHub stars](https://img.shields.io/github/stars/stormpath/stormpath-sdk-angular.svg)](https://github.com/stormpath/stormpath-sdk-angular/stargazers)\n[![GitHub license](https://img.shields.io/badge/license-APACHE-red.svg)](https://raw.githubusercontent.com/stormpath/stormpath-sdk-angular/master/LICENSE)\n\n> Angular Components for integrating with Stormpath's API\n\n<div>\n  <a href=\"http://angular.io\">\n    <img src=\"https://github.com/stormpath/stormpath-sdk-angular/raw/master/static/angular.png\"></a>\n  <a href=\"https://www.stormpath.com/\">\n    <img src=\"https://github.com/stormpath/stormpath-sdk-angular/raw/master/static/stormpath.png\"></a>\n</div>\n\n## Table of contents\n\n- [About](#about)\n- [Installation](#installation)\n  - [Configuration](#configuration)\n- [Documentation](#documentation)\n- [Development](#development)\n- [License](#licence)\n\n## About\n\nAngular SDK for Stormpath's API. If you're looking for **AngularJS** support, please see [stormpath-sdk-angularjs](https://github.com/stormpath/stormpath-sdk-angularjs).\n\n## Installation\n\nInstall through npm:\n```\nnpm install --save angular-stormpath\n```\n\nThen use it in your app like so:\n\n```typescript\nimport { Component } from '@angular/core';\nimport { AuthPortComponent } from 'angular-stormpath';\n\n@Component({\n  selector: 'app-root',\n  template: `<div *ngIf=\"(user$ | async)\" class=\"row text-center\">\n <h2>\n   Welcome, {{ ( user$ | async ).fullName }}.\n </h2>\n\n <ul class=\"nav nav-pills nav-stacked text-centered\">\n   <li role=\"presentation\" (click)=\"logout()\"><a href=\"#\">Logout</a></li>\n </ul>\n</div>\n\n<sp-authport></sp-authport>`\n})\nexport class AppComponent extends AuthPortComponent {\n}\n```\n\nIf you're using a version of Angular < 2.3, extending AuthPortComponent won't work for you. As an alternative, you can inject the `Stormpath` service into your component, subscribe to `stormpath.user$` and implement `logout()` yourself.\n\n```typescript\nimport { Account, Stormpath } from 'angular-stormpath';\n...\nexport class AppComponent {\n  user$: Observable<Account | boolean>;\n\n  constructor(private stormpath: Stormpath) {\n    this.user$ = this.stormpath.user$;\n  }\n\n  logout(): void {\n    this.stormpath.logout();\n  }\n}\n```\n\nYou may also find it useful to view the [demo source](https://github.com/stormpath/stormpath-sdk-angular/blob/master/demo/app.component.ts).\n\n### Configuration\n\nTo override the endpoint prefix or URIs for the various endpoints, you can modify the defaults in [StormpathConfiguration](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/stormpath/stormpath.config.ts).\n\nFor example, to override the endpoint prefix and `/me` URI in [demo.module.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/demo/demo.module.ts), change it to the following:\n\n```typescript\nexport function stormpathConfig(): StormpathConfiguration {\n let spConfig: StormpathConfiguration = new StormpathConfiguration();\n spConfig.endpointPrefix = 'http://api.mycompany.com';\n spConfig.meUri = '/account';\n return spConfig;\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, StormpathModule],\n  bootstrap: [AppComponent],\n  providers: [{\n    provide: StormpathConfiguration, useFactory: stormpathConfig\n  }]\n})\nexport class DemoModule {\n}\n```\n\n#### OAuth\n\nIf your Angular app is on a different domain than your endpoints, OAuth will be used for login/logout. The access token will be stored in localStorage under the name `stormpath:token` and it will be automatically added as an `Authorization` header when you send HTTP requests to your `/me` endpoint. \n\nIf you'd like to add this header to additional URLs, you'll need to add them as follows:\n\n```typescript\nlet config: StormpathConfiguration = new StormpathConfiguration();\nconfig.autoAuthorizedUris.push(new RegExp('http://localhost:3000/myapi/*)');\n```\n\n#### Templates\n\nTo override templates, you can use the `customTemplate` attribute on a component. Below is an example of [app.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/demo/app.component.ts) with a custom `<sp-authport>` and `<login-form>`:\n\n```typescript\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Stormpath, StormpathErrorResponse, Account, LoginFormModel } from 'angular-stormpath';\n\n@Component({\n  selector: 'demo-app',\n  template: `<div class=\"container\">\n<div *ngIf=\"(user$ | async)\" class=\"row text-center\">\n  <h2>\n    Welcome, {{ ( user$ | async ).fullName }}.\n  </h2>\n  <hr/>\n\n  <ul class=\"nav nav-pills nav-stacked text-centered\">\n    <li role=\"presentation\" (click)=\"logout(); false\"><a href=\"\">Logout</a></li>\n  </ul>\n</div>\n\n<template #loginform>\n  <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n  <form>\n      <label for=\"email\">Email</label>\n      <input id=\"email\" name=\"login\" type=\"text\" [(ngModel)]=\"loginFormModel.login\">\n      <label for=\"passwordField\">Password</label>\n      <input id=\"passwordField\" name=\"password\" type=\"password\" [(ngModel)]=\"loginFormModel.password\">\n      <button (click)=\"login()\">Login</button>\n  </form>\n</template>\n\n<template #authport>\n  <div *ngIf=\"(user$ | async) === false\">\n      <h2>Sign In</h2>\n      <login-form [customTemplate]=\"loginform\"></login-form>\n  </div>\n</template>\n\n<sp-authport [customTemplate]=\"authport\"></sp-authport>\n\n</div>`\n})\nexport class AppComponent implements OnInit {\n\n  protected loginFormModel: LoginFormModel;\n  protected error: string;\n\n  private user$: Observable<Account | boolean>;\n  private loggedIn$: Observable<boolean>;\n  private _login: boolean;\n  private _register: boolean;\n\n  constructor(public stormpath: Stormpath) {\n    this.loginFormModel = {\n      login: '',\n      password: ''\n    };\n  }\n\n  ngOnInit(): void {\n    this._login = true;\n    this._register = false;\n    this.user$ = this.stormpath.user$;\n    this.loggedIn$ = this.user$.map(user => !!user);\n  }\n\n  showLogin(): void {\n    this._login = !(this._register = false);\n  }\n\n  showRegister(): void {\n    this._register = !(this._login = false);\n  }\n\n  login(): void {\n    this.error = null;\n    this.stormpath.login(this.loginFormModel)\n      .subscribe(null, (error: StormpathErrorResponse) => {\n        this.error = error.message;\n      });\n  }\n\n  logout(): void {\n    this.stormpath.logout();\n  }\n}\n```\n\n**NOTE:** One problem with this approach is you'll need to copy all the referenced variables in the template into your component. Another option is to extend the existing Stormpath component and override its `template` variable in `@Component`. This is the recommended solution if you're using Angular 2.3+.\n\n#### Access Token Storage\n\nTo change the storage mechanism for authentication tokens from localStorage (the default), to cookies, change the class for the 'tokenStore' provider.\n\n```typescript\n{\n  provide: 'tokenStore', useClass: CookieTokenStoreManager\n}\n```\n\nBelow is a list of direct links to each component. You can use the HTML defined in their `template` variable as a starting point for your customizations.\n\n* [authport.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/authport/authport.component.ts)\n* [email-verification.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/email-verification/email-verification.component.ts)\n* [forgot-password.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/forgot-password/forgot-password.component.ts)\n* [login.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/login/login.component.ts)\n* [register.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/register/register.component.ts)\n* [resend-email-verification.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/resend-email-verification/resend-email-verification.component.ts)\n* [reset-password-component.component.ts](https://github.com/stormpath/stormpath-sdk-angular/blob/master/src/reset-password/reset-password.component.ts)\n\n### Usage without a module bundler\n```\n<script src=\"node_modules/dist/umd/stormpath-sdk-angular/stormpath-sdk-angular.js\"></script>\n<script>\n    // everything is exported Stormpath namespace\n</script>\n```\n\n## Documentation\nAll documentation is auto-generated from the source via typedoc and can be viewed at https://docs.stormpath.com/angular/api.\n\n## Development\n\n### Prepare your environment\n* Install [Node.js](http://nodejs.org/) and npm\n* Install local dev dependencies: `npm install` while current directory is this repo\n\n### Development server\nRun `npm start` to start a development server on port 8000 with auto reload + tests.\n\n### Testing\nRun `npm test` to run tests once or `npm run test:watch` to continually run tests.\n\n### Using npm link\n\nIf you want to use `npm link` to use this module in another Angular project, follow the steps below:\n\n1. Build this project using `npm run build:dist`.\n2. Run `npm link` in this project's directory.\n3. Run `npm link angular-stormpath` in the `<test-project>`.\n4. Run `rm -rf node_modules/angular-stormpath/node_modules` in `<test-project>`.\n5. Manually install dependencies required by `angular-stormpath`:\n\n```\nnpm install ng2-webstorage angular2-cookie --save\n```\n\nYou'll know if this doesn't work because you'll see an error message like the following:\n\n```\nType 'Observable<boolean | Account>' is not assignable to type 'Observable<boolean | Account>'. '\nProperty 'source' is protected but type 'Observable<T>' is not a class derived from 'Observable<T>'.\n```\n\nWhen this happens, you can use the ol' fashioned copy and paste method. If you have `stormpath-sdk-angular` in an adjacent directory, the commands below should work on your project that has `angular-stormpath` already installed. You will need to run `npm run build:dist` every time you change code in this project.\n\n```\nrm -rf node_modules/angular-stormpath/dist\ncp -r ../stormpath-sdk-angular/dist node_modules/angular-stormpath/.\ncp ../stormpath-sdk-angular/package.json node_modules/angular-stormpath/.\n```\n\n### Release\n\nBump the version in package.json (once the module hits 1.0 this will become automatic).\n\n```bash\nnpm run release\n```\n\nFor more information, see [generator-angular-library](https://www.npmjs.com/package/generator-angular-library). \nIt was used to create this project.\n\n## License\n\nApache-2.0 © [Stormpath](https://stormpath.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stormpath/stormpath-sdk-angular.git"
  },
  "scripts": {
    "build:clean": "rm -rf dist",
    "build:demo": "webpack -p",
    "build:dist": "npm run build:umd && npm run build:ngc",
    "build:ngc": "ngc -p tsconfig-ngc.json",
    "build:umd": "webpack --config webpack.config.umd.js",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
    "commit": "git-cz",
    "e2e": "protractor",
    "e2e:all": "npm run e2e && npm run e2e:client && npm run e2e:client+cookies",
    "e2e:client": "protractor --params.api https://raible.apps.stormpath.io",
    "e2e:client+cookies": "protractor --params.api https://raible.apps.stormpath.io --params.storage cookies",
    "gh-pages": "git checkout gh-pages && git merge master && npm run build:demo && npm run typedoc && git add . && git commit -m 'chore: build demo and docs' && git push && git checkout master",
    "postrelease": "npm run build:clean && npm run gh-pages",
    "pree2e": "webdriver-manager update",
    "prerelease": "npm test",
    "release": "standard-version --first-release && git push --follow-tags origin master && npm run build:dist && npm publish",
    "start": "concurrently --raw \"webpack-dev-server --open\" \"node demo/server/server.js stormpath-api\" \"npm run test:watch\"",
    "stop": "killall -SIGINT stormpath-api",
    "test": "karma start",
    "test:watch": "karma start --watch",
    "typedoc": "mkdir -p dist/docs && typedoc --options typedoc.json src/*.ts"
  },
  "typings": "./dist/esm/src/index.d.ts",
  "version": "0.1.6"
}
